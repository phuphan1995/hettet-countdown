{"version":3,"sources":["xuan_nay_con_khong_ve.m4a","App.js","reportWebVitals.js","index.js"],"names":["HETTETTIME","Date","parse","App","useState","days","setDays","hours","setHours","mins","setMins","secs","setSecs","delay","useBoolean","isRunning","toggleIsRunning","useAudio","src","soundfile","autoPlay","loop","audio","controls","useEffect","play","useInterval","timenow","getTime","countdownDuration","txtsecs","Math","floor","txtmins","txthours","txtdays","className","id","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAAe,G,MAAA,IAA0B,mDCInCA,EAAaC,KAAKC,MAAM,wBAkGfC,MAjGf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNC,EADM,KACAC,EADA,OAEaF,mBAAS,GAFtB,mBAENG,EAFM,KAECC,EAFD,OAGWJ,mBAAS,GAHpB,mBAGNK,EAHM,KAGAC,EAHA,OAIWN,mBAAS,GAJpB,mBAINO,EAJM,KAIAC,EAJA,OAKaR,mBAAS,KALtB,mBAKNS,EALM,aAMwBC,aAAW,IANnC,mBAMNC,EANM,KAMKC,EANL,OAQyBC,YAAS,CAC7CC,IAAKC,EACLC,UAAU,EACVC,MAAM,IAXK,mBAQNC,EARM,KAQQC,GARR,WAuCb,OAvCa,KAcbC,qBAAU,WACRD,EAASE,SACR,IAEHC,aACE,WACE,IACIC,GADM,IAAI1B,MACI2B,UACdC,GAAqB7B,EAAa2B,GAAW,IACjD,GAAIE,EAAoB,EACtBb,GAAgB,OACX,CACL,IAAIc,EAAUC,KAAKC,MAAMH,EAAoB,IACzCI,EAAUF,KAAKC,MAAOH,EAAoB,GAAM,IAChDK,EAAWH,KAAKC,MAAOH,EAAiB,KAAgB,IACxDM,EAAUJ,KAAKC,MAAMH,EAAiB,OAC1CvB,EAAQ6B,GACR3B,EAAS0B,GACTxB,EAAQuB,GACRrB,EAAQkB,MAGZf,EAAYF,EAAQ,MAIpB,sBAAKuB,UAAU,YAAf,UACGd,EAcD,sBAAKc,UAAU,OAAf,UACE,oBAAIC,GAAG,WAAP,+DACA,sBAAKC,MAAM,WAAX,UACE,sBAAKA,MAAM,QAAX,UACE,qBAAKD,GAAG,OAAOC,MAAM,MAArB,SACGjC,IAEH,qBAAKgC,GAAG,YAAYC,MAAM,OAA1B,wBAIF,sBAAKA,MAAM,QAAX,UACE,qBAAKD,GAAG,QAAQC,MAAM,MAAtB,SACG/B,IAEH,qBAAK8B,GAAG,aAAaC,MAAM,OAA3B,yBAIF,sBAAKA,MAAM,QAAX,UACE,qBAAKD,GAAG,OAAOC,MAAM,MAArB,SACG7B,IAEH,qBAAK4B,GAAG,YAAYC,MAAM,OAA1B,wBAIF,sBAAKA,MAAM,QAAX,UACE,qBAAKD,GAAG,OAAOC,MAAM,MAArB,SACG3B,IAEH,qBAAK0B,GAAG,YAAYC,MAAM,OAA1B,wBAIF,oBAAID,GAAG,WAAP,2DCnFKE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d66317f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/xuan_nay_con_khong_ve.d96c20f0.m4a\";","import { useEffect, useState } from 'react';\nimport { useAudio, useBoolean, useInterval } from 'react-use';\nimport './App.css';\nimport soundfile from './xuan_nay_con_khong_ve.m4a';\nconst HETTETTIME = Date.parse('Feb 21 2021 00:00:00');\nfunction App() {\n  const [days, setDays] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [mins, setMins] = useState(0);\n  const [secs, setSecs] = useState(0);\n  const [delay, setDelay] = useState(1000);\n  const [isRunning, toggleIsRunning] = useBoolean(true);\n\n  const [audio, state, controls, ref] = useAudio({\n    src: soundfile,\n    autoPlay: true,\n    loop: true,\n  });\n\n  useEffect(() => {\n    controls.play();\n  }, []);\n\n  useInterval(\n    () => {\n      let now = new Date();\n      let timenow = now.getTime();\n      let countdownDuration = (HETTETTIME - timenow) / 1000;\n      if (countdownDuration < 0) {\n        toggleIsRunning(false);\n      } else {\n        let txtsecs = Math.floor(countdownDuration % 60);\n        let txtmins = Math.floor((countdownDuration / 60) % 60);\n        let txthours = Math.floor((countdownDuration / (60 * 60)) % 24);\n        let txtdays = Math.floor(countdownDuration / (60 * 60 * 24));\n        setDays(txtdays);\n        setHours(txthours);\n        setMins(txtmins);\n        setSecs(txtsecs);\n      }\n    },\n    isRunning ? delay : null\n  );\n\n  return (\n    <div className=\"container\">\n      {audio}\n      {/* <pre>{JSON.stringify(state, null, 2)}</pre>\n      <button onClick={controls.pause}>Pause</button>\n      <button onClick={controls.play}>Play</button>\n      <br />\n      <button onClick={controls.mute}>Mute</button>\n      <button onClick={controls.unmute}>Un-mute</button>\n      <br />\n      <button onClick={() => controls.volume(0.1)}>Volume: 10%</button>\n      <button onClick={() => controls.volume(0.5)}>Volume: 50%</button>\n      <button onClick={() => controls.volume(1)}>Volume: 100%</button>\n      <br />\n      <button onClick={() => controls.seek(state.time - 5)}>-5 sec</button>\n      <button onClick={() => controls.seek(state.time + 5)}>+5 sec</button> */}\n      <div className=\"main\">\n        <h2 id=\"tetornot\">Sắp xa quê rồi!!! Chỉ còn...</h2>\n        <div class=\"clearfix\">\n          <div class=\"clock\">\n            <div id=\"days\" class=\"num\">\n              {days}\n            </div>\n            <div id=\"days-text\" class=\"text\">\n              Ngày\n            </div>\n          </div>\n          <div class=\"clock\">\n            <div id=\"hours\" class=\"num\">\n              {hours}\n            </div>\n            <div id=\"hours-text\" class=\"text\">\n              Giờ\n            </div>\n          </div>\n          <div class=\"clock\">\n            <div id=\"mins\" class=\"num\">\n              {mins}\n            </div>\n            <div id=\"mins-text\" class=\"text\">\n              Phút\n            </div>\n          </div>\n          <div class=\"clock\">\n            <div id=\"secs\" class=\"num\">\n              {secs}\n            </div>\n            <div id=\"secs-text\" class=\"text\">\n              Giây\n            </div>\n          </div>\n          <h2 id=\"tetornot\">thôi Sương à, ahuhu</h2>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}